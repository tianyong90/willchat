/*!
* jquery.inputmask.min.js
* http://github.com/RobinHerbots/jquery.inputmask
* Copyright (c) 2010 - 2015 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 3.2.3
*/
!function(a){"function"==typeof define&&define.amd?define(["jquery","inputmask"],a):"object"==typeof exports?module.exports=a(require("jquery"),require("./inputmask")):a(jQuery,window.Inputmask)}(function(a,b){return void 0===a.fn.inputmask&&(a.fn.inputmask=function(c,d){var e,f;if(d=d||{},"string"==typeof c)switch(c){case"mask":return e=new b(d),this.each(function(){e.mask(this)});case"unmaskedvalue":return f=this.jquery&&this.length>0?this[0]:this,f.inputmask?f.inputmask.unmaskedvalue():a(f).val();case"remove":return this.each(function(){this.inputmask&&this.inputmask.remove()});case"getemptymask":return f=this.jquery&&this.length>0?this[0]:this,f.inputmask?f.inputmask.getemptymask():"";case"hasMaskedValue":return f=this.jquery&&this.length>0?this[0]:this,f.inputmask?f.inputmask.hasMaskedValue():!1;case"isComplete":return f=this.jquery&&this.length>0?this[0]:this,f.inputmask?f.inputmask.isComplete():!0;case"getmetadata":return f=this.jquery&&this.length>0?this[0]:this,f.inputmask?f.inputmask.getmetadata():void 0;case"setvalue":f=this.jquery&&this.length>0?this[0]:this,a(f).val(d),void 0!==f.inputmask&&a(f).triggerHandler("setvalue.inputmask");break;case"option":if("string"!=typeof d)return this.each(function(){return void 0!==this.inputmask?this.inputmask.option(d):void 0});if(f=this.jquery&&this.length>0?this[0]:this,void 0!==f.inputmask)return f.inputmask.option(d);break;default:return d.alias=c,e=new b(d),this.each(function(){e.mask(this)})}else{if("object"==typeof c)return e=new b(c),void 0===c.mask&&void 0===c.alias?this.each(function(){return void 0!==this.inputmask?this.inputmask.option(c):void e.mask(this)}):this.each(function(){e.mask(this)});if(void 0===c)return this.each(function(){e=new b(d),e.mask(this)})}}),a.fn.inputmask});